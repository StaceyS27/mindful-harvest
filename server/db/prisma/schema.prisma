// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int     @id @default(autoincrement())
  username       String? @unique
  email          String? @unique
  hashedPassword String?
  cart           Cart?
  isAdmin        Boolean @default(false)
  order          Order[]
}

model Product {
  id           Int        @id @default(autoincrement())
  image        String?
  title        String     @unique
  description  String
  price        Int
  available    Boolean
  returnPolicy Boolean?
  createdAt    DateTime?  @default(now())
  updatedAt    DateTime?
  quantity     Int
  cartItem     CartItem[]
  orderItem    OrderItem[]
  category     Category   @relation(fields: [categoryId], references: [id])
  categoryId   Int
}

model Cart {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  items     CartItem[]
  user      User       @relation(fields: [userId], references: [id])
  userId    Int        @unique
}

model CartItem {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
}

model Order {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  status      String
  totalAmount Int
  items       OrderItem[]
  userId      Int
}

model OrderItem {
  id Int @id @default(autoincrement())
  product Product @relation(fields: [productId], references: [id])
  productId Int
  quantity Int
  order Order @relation(fields: [orderId], references: [id])
  orderId Int
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  product Product[]
}
